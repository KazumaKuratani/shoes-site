body{
    margin: 0;
    color: black;
}
header{
    width: 100%;
    margin: auto;
    display: grid; // 特定の行と列に要素を簡単に配置できる方法で、複雑なデザインを効率的に実現するのに役立つ
    grid-template-columns: 50px 1fr 50px; // 左端と右端はそれぞれ50px, 真ん中は残りのスペース全て（画面全体の幅の-100px）、grid-template-columns: 1fr 1fr 1frならグリッドが３列に分割され、それぞれ全体の幅を均等に分ける。
    grid-template-rows: 50px;// 行の高さを５０ｐｘとする
    justify-content: center;
    align-items: center;
    position: relative;
    z-index: 100;
}

header .logo{
    font-weight: 800;
    margin-left: 50px;
}

header .menu{
    padding: 0;
    margin: 0;
    list-style: none;// リスト（<ul> や <ol>、または <li>）に適用されるプロパティで、デフォルトのリストスタイルを削除するために使われる
    display: flex;
    justify-content: center;
    gap: 20px;
    font-weight: 500;
}

.slider{
    height: 100vh;
    margin-top: -50px;
    position: relative;
}



.slider .list .item{
    position: absolute;
    inset: 0 0 0 0;// 要素を親要素の上下左右にピタッと接するように配置する
    opacity: 0;
    transition: 2s;
}

.slider .list .item img{
    z-index: 100;
    position:absolute;
    right: 7%;
    top: 10%;
    width: 40%;
    height: 40%;
}

.slider .list .item .content{
    position: absolute;
    left: 10%;
    top: 20%;
    width: 500px;
    max-width: 80%;
    z-index: 1;
}

.slider .list .item .content p:nth-child(1){
    text-transform: uppercase;// 指定した要素内のテキストを すべて大文字に変換 
    letter-spacing: 10px;// 文字間のスペースを指定
}

.slider .list .item .content h2{
    font-size: 55px;
    margin: 0;
}

.slider .list .item.active{
    opacity: 1;
    z-index: 10;
}

@keyframes showContent{
    to{
        filter: blur(0); // 要素の画像やコンテンツをぼかす効果を与える
        opacity: 1;
    }
}

.slider .list .item.active h2,.slider .list .item.active p{
    animation: showContent;
    animation-duration: 1.2s;
    filter: blur(10);
    opacity: 0;
    animation-fill-mode: forwards;
}
.slider .list .item.active h2{
    animation-delay: 0.4s;
}
.slider .list .item.active p{
    animation-delay: 0.8;
}




.arrows{
    position: absolute;
    bottom: 10%;
    left: 10%;
    z-index: 100;
}

.arrows button{
    border: none;
    width: 42px;
    height: 42px;
    border-radius: 5px;
    font-size: x-large;
    color: rgb(0, 0, 0);
    background-color: rgb(240, 240, 240);
    transition: 0.5s;
}

.arrows button:hover{
    color: #ffffff;
    background-color: rgb(47, 47, 47);
}

.thumbnail{
    position: absolute;
    bottom: 50px;
    z-index: 11;
    display: flex;
    gap: 10px;
    width: 100%;
    height: 250px;
    padding-top: 0px;
    padding-bottom: 0px;
    padding-left: 300px;
    box-sizing: border-box;// width と height は パディング と ボーダー を含んだサイズとして指定される。そのためここでは高さは250pxのままで幅も100%のままである。通常なら幅の場合100% + paddingとmarginで指定した値が追加されてしまう。
    overflow: auto;// コンテンツが要素のボックスサイズを超えた場合に、自動的にスクロールバーが表示される、hiddenとの違いを確認
}

.thumbnail::-webkit-scrollbar{
    width: 0;
}
.thumbnail .item{
    width: 200px;
    height: 240px;
    transition: 0.5s;
}

.thumbnail .item img{
    width: 100%;
    height: 100%;
    object-fit: cover;// コンテナの領域全体をカバーするが、画像のアスペクト比を保ちながら、画像を拡大または縮小する。画像が小さすぎる場合は拡大されて表示され、大きすぎる場合ははみ出る部分が切り取られる。最高のプロパティだぜ！
    border-radius: 10px;
    filter: blur(0.9);
}

.thumbnail .item.active{
    filter: brightness(1.3);
    color: rgb(223, 223, 223);
    box-shadow: 0px 0px 2px gray;
}
.thumbnail .item .content{
    position: absolute;
    inset: auto 10px 10px 10px;
}






